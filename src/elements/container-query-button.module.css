/* src/elements/container-query-button.module.css */
.buttonWrapper {
	position: relative;
	width: 12rem;
	height: 4rem;
	container-type: size; /* Query both inline and block size */
	container-name: button-container; /* Optional: name the container */
}

.buttonLink {
	/* Define variables for corner dimensions and calculated offset */
	--corner-size: 0.75rem;
	--corner-offset: 0.25rem;
	/* NEW: Calculate the offset needed for travel without border */
	--corner-travel-offset: calc(2 * var(--corner-offset) + var(--corner-size));

	display: inline-flex; /* Use flex for centering */
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100%;
	position: relative; /* For positioning corners */
	cursor: pointer;
	/* REMOVED: border: 1px solid hsl(var(--border)); */
	background-color: hsl(var(--secondary));
	color: hsl(var(--foreground));
	font-weight: bold;
	text-decoration: none;
	transition: background-color 300ms;
}

.buttonLink:hover {
	background-color: hsl(var(--muted));
}

.corner {
	position: absolute;
	width: var(--corner-size);
	height: var(--corner-size);
	font-size: 1rem;
	line-height: var(--corner-size);
	text-align: center;
	color: hsl(var(--muted-foreground));
	transition: transform 300ms ease-in-out;
}

.topLeft {
	top: var(--corner-offset);
	left: var(--corner-offset);
}

.topRight {
	top: var(--corner-offset);
	right: var(--corner-offset);
}

.bottomLeft {
	bottom: var(--corner-offset);
	left: var(--corner-offset);
}

.bottomRight {
	bottom: var(--corner-offset);
	right: var(--corner-offset);
}

/* Hover Animations using Container Query Units and CSS Variables */
.buttonLink:hover .topLeft {
	transform: translateX(calc(100cqi - var(--corner-travel-offset)));
}

.buttonLink:hover .topRight {
	transform: translateY(calc(100cqb - var(--corner-travel-offset)));
}

.buttonLink:hover .bottomRight {
	transform: translateX(calc(-100cqi + var(--corner-travel-offset)));
}

.buttonLink:hover .bottomLeft {
	transform: translateY(calc(-100cqb + var(--corner-travel-offset)));
}
